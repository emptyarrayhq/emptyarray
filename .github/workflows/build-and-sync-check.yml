name: Build and Sync Check (Preview sync)
permissions:
  actions: write
  contents: read
  pull-requests: write

on:
  push:
    branches:
      - preview
  workflow_dispatch:

jobs:
  check-all-prs:
    runs-on: ubuntu-latest
    steps:
      - name: Debug trigger info
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"
          echo "SHA: ${{ github.sha }}"

      - name: Trigger checks for all open PRs
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            console.log('Starting workflow with event:', process.env.GITHUB_EVENT_NAME);
            console.log('Branch ref:', process.env.GITHUB_REF);
            
            const per_page = 100;
            let page = 1;
            let allPRs = [];
            
            // Fetch all open PRs
            while (true) {
              console.log(`Fetching PRs page ${page}...`);
              const response = await github.rest.pulls.list({
                owner: context.repo.owner,
                repo: context.repo.repo,
                base: 'preview',
                state: 'open',
                per_page: per_page,
                page: page
              });
              
              if (response.data.length === 0) break;
              allPRs = allPRs.concat(response.data);
              if (response.data.length < per_page) break;
              page++;
            }
            
            console.log(`Found ${allPRs.length} open PRs`);
            
            // Trigger sync check workflow for each non-draft PR
            for (const pr of allPRs) {
              if (!pr.draft) {
                console.log(`Processing PR #${pr.number} (${pr.head.ref})`);
                
                // Get the latest check status for this PR
                const checks = await github.rest.checks.listForRef({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  ref: pr.head.sha,
                  check_name: 'build-and-check'
                });
                
                const lastCheck = checks.data.check_runs[0];
                console.log(`PR #${pr.number} - Previous status: ${lastCheck ? lastCheck.conclusion : 'No previous checks'}`);
                
                try {
                  await github.rest.actions.createWorkflowDispatch({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    workflow_id: 'sync-check.yml',
                    ref: pr.head.ref,
                    inputs: {
                      pr_number: pr.number.toString()
                    }
                  });
                  console.log(`Successfully triggered check for PR #${pr.number} (previous status: ${lastCheck ? lastCheck.conclusion : 'none'})`);
                } catch (error) {
                  console.error(`Failed to trigger check for PR #${pr.number}: ${error.message}`);
                }
              } else {
                console.log(`Skipping draft PR #${pr.number}`);
              }
            } 
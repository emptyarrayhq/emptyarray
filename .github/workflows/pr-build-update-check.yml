name: Build and branch check

on:
  pull_request:
    branches:
      - preview
    types:
      - opened
      - synchronize
      - edited
      - reopened
  push:
    branches:
      - preview

jobs:
  check-all-prs:
    if: github.event_name == 'push' && github.ref == 'refs/heads/preview'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: pulls } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              base: 'preview'
            });
            
            console.log(`Found ${pulls.length} open PRs`);
            
            for (const pr of pulls) {
              if (!pr.draft) {
                console.log(`Checking PR #${pr.number}`);
                await github.rest.actions.createWorkflowDispatch({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  workflow_id: 'pr-build-update-check.yml',
                  ref: pr.head.ref,
                  inputs: {
                    pr_number: pr.number.toString()
                  }
                });
              }
            }

  build:
    if: |
      github.event.pull_request.draft == false && 
      (github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.17.0'
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest
      - name: Install dependencies
        run: pnpm install
      - name: Build
        run: pnpm run build
      - name: Check preview branch sync
        run: |
          git fetch origin preview
          BASE_SHA=$(git merge-base origin/preview HEAD)
          PREVIEW_SHA=$(git rev-parse origin/preview)
          if [ "$BASE_SHA" != "$PREVIEW_SHA" ]; then
            echo "❌ Your branch is not up to date with preview branch"
            echo "Current preview SHA: $PREVIEW_SHA"
            echo "Last common commit: $BASE_SHA"
            echo "Differences:"
            git log --oneline origin/preview...HEAD
            exit 1
          else
            echo "✅ Branch is up to date with preview"
          fi
